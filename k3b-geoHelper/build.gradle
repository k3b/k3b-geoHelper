// subproject k3b-geoHelper
apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'maven'
apply plugin: 'signing'

// markdown in javadoc
// https://github.com/Abnaxos/pegdown-doclet
apply plugin: 'ch.raffael.pegdown-doclet'


// vvv maven upload stuff
// https://jitpack.io/com/github/k3b/k3b-geoHelper/WikipediaAndroid-SNAPSHOT/pom.xml
ext {
	mavenUpload_archivesBaseName = 'k3b-geoHelper'
	mavenUpload_description = 'A j2se geo support library that is compatible with Android.'
}

group = "com.github.${github_userId}"
description = "${mavenUpload_description}"
version = project_version
// ^^^ maven upload stuff

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

dependencies {
    implementation 'org.slf4j:slf4j-api:1.7.7@jar'
    implementation 'commons-io:commons-io:2.6'
    implementation 'androidx.annotation:annotation:1.1.0'

    // compile fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.slf4j:slf4j-simple:1.7.7@jar'
    // https://github.com/Pragmatists/JUnitParams
    testImplementation 'pl.pragmatists:JUnitParams:1.1.1'
}

task testZip(type: Zip, dependsOn: [test, jacocoTestReport]) {
    group = 'Distribution'
    archiveClassifier = 'tests'
    description = "Builds -${archiveClassifier} archive containing testresults and codecoverage ."

    from('src/dist') {
        // include 'changelog.txt'
    }

    from ('build/reports/tests' ) {
        into 'tests'
    }

    from ('build/reports/jacoco/test/html' ) {
        into 'codecoverage'
    }
}

task reports (dependsOn: [test, jacocoTestReport, javadoc])

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

// apply from: '../uploadArchives.gradle'